libbatterycontrol.so.6:qml_register_types_org_kde_plasma_private_battery()
libcolorcorrect.so.6:ColorCorrect::CompositorAdaptor::CompositorAdaptor(QObject*)
libcolorcorrect.so.6:ColorCorrect::CompositorAdaptor::errorChanged()
libcolorcorrect.so.6:ColorCorrect::CompositorAdaptor::errorTextChanged()
libcolorcorrect.so.6:ColorCorrect::CompositorAdaptor::preview(int)
libcolorcorrect.so.6:ColorCorrect::CompositorAdaptor::runningChanged()
libcolorcorrect.so.6:ColorCorrect::CompositorAdaptor::setError(ColorCorrect::CompositorAdaptor::ErrorCode)
libcolorcorrect.so.6:ColorCorrect::CompositorAdaptor::stopPreview()
libcolorcorrect.so.6:qml_register_types_org_kde_colorcorrect()
libkfontinst.so.6:KFI::FC::bitmapsEnabled()
libkfontinst.so.6:KFI::FC::createName(_FcPattern*)
libkfontinst.so.6:KFI::FC::slant(int)
libkfontinst.so.6:KFI::FC::spacing(int)
libkfontinst.so.6:KFI::FC::spacingStr(int)
libkfontinst.so.6:KFI::FC::weight(int)
libkfontinst.so.6:KFI::FC::width(int)
libkfontinst.so.6:KFI::Misc::contractHome(QString)
libkfontinst.so.6:KFI::Misc::expandHome(QString)
libkfontinst.so.6:KFI::WritingSystems::WritingSystems()
libkfontinst.so.6:KFI::WritingSystems::instance()
libkfontinstui.so.6:KFI::CFcEngine::CFcEngine(bool)
libkfontinstui.so.6:KFI::CFcEngine::Xft::Xft()
libkfontinstui.so.6:KFI::CFcEngine::Xft::freeColors()
libkfontinstui.so.6:KFI::CFcEngine::Xft::~Xft()
libkfontinstui.so.6:KFI::CFcEngine::getDefaultPreviewString()
libkfontinstui.so.6:KFI::CFcEngine::getFont(int)
libkfontinstui.so.6:KFI::CFcEngine::getLowercaseLetters()
libkfontinstui.so.6:KFI::CFcEngine::getPunctuation()
libkfontinstui.so.6:KFI::CFcEngine::getSizes()
libkfontinstui.so.6:KFI::CFcEngine::getUppercaseLetters()
libkfontinstui.so.6:KFI::CFcEngine::queryFont()
libkfontinstui.so.6:KFI::CFcEngine::readConfig(KConfig&)
libkfontinstui.so.6:KFI::CFcEngine::reinit()
libkfontinstui.so.6:KFI::CFcEngine::writeConfig(KConfig&)
libkfontinstui.so.6:KFI::CFcEngine::xft()
libkfontinstui.so.6:KFI::CFcEngine::~CFcEngine()
libklipper.so.6:HistoryCycler::HistoryCycler(QObject*)
libklipper.so.6:HistoryCycler::cycleNext()
libklipper.so.6:HistoryCycler::cyclePrev()
libklipper.so.6:HistoryCycler::~HistoryCycler()
libklipper.so.6:HistoryItem::~HistoryItem()
libklipper.so.6:HistoryModel::HistoryModel()
libklipper.so.6:HistoryModel::changed(bool)
libklipper.so.6:HistoryModel::clear()
libklipper.so.6:HistoryModel::clearHistory()
libklipper.so.6:HistoryModel::loadHistory()
libklipper.so.6:HistoryModel::loadSettings()
libklipper.so.6:HistoryModel::moveBackToTop()
libklipper.so.6:HistoryModel::moveTopToBack()
libklipper.so.6:HistoryModel::saveClipboardHistory()
libklipper.so.6:HistoryModel::self()
libklipper.so.6:HistoryModel::settings()
libklipper.so.6:HistoryModel::slotIgnored(QClipboard::Mode)
libklipper.so.6:HistoryModel::slotReceivedEmptyClipboard(QClipboard::Mode)
libklipper.so.6:HistoryModel::~HistoryModel()
libklipper.so.6:Klipper::Klipper(QObject*)
libklipper.so.6:Klipper::clearClipboardContents()
libklipper.so.6:Klipper::clearClipboardHistory()
libklipper.so.6:Klipper::clipboardHistoryUpdated()
libklipper.so.6:Klipper::disableURLGrabber()
libklipper.so.6:Klipper::getClipboardContents()
libklipper.so.6:Klipper::getClipboardHistoryItem(int)
libklipper.so.6:Klipper::getClipboardHistoryMenu()
libklipper.so.6:Klipper::loadSettings()
libklipper.so.6:Klipper::reloadConfig()
libklipper.so.6:Klipper::saveClipboardHistory()
libklipper.so.6:Klipper::saveSession()
libklipper.so.6:Klipper::self()
libklipper.so.6:Klipper::setURLGrabberEnabled(bool)
libklipper.so.6:Klipper::showKlipperManuallyInvokeActionMenu()
libklipper.so.6:Klipper::showKlipperPopupMenu()
libklipper.so.6:Klipper::showPopupMenu(QMenu*)
libklipper.so.6:Klipper::slotConfigure()
libklipper.so.6:Klipper::slotCycleNext()
libklipper.so.6:Klipper::slotCyclePrev()
libklipper.so.6:Klipper::slotHistoryChanged(bool)
libklipper.so.6:Klipper::slotPopupMenu()
libklipper.so.6:Klipper::slotRepeatAction()
libklipper.so.6:Klipper::slotStartShowTimer()
libklipper.so.6:Klipper::updateTimestamp()
libklipper.so.6:Klipper::~Klipper()
libklipper.so.6:SystemClipboard::SystemClipboard()
libklipper.so.6:SystemClipboard::blockFetchingNewData()
libklipper.so.6:SystemClipboard::checkClipData(QClipboard::Mode)
libklipper.so.6:SystemClipboard::clear(SystemClipboard::SelectionMode)
libklipper.so.6:SystemClipboard::ignored(QClipboard::Mode)
libklipper.so.6:SystemClipboard::isLocked(QClipboard::Mode)
libklipper.so.6:SystemClipboard::receivedEmptyClipboard(QClipboard::Mode)
libklipper.so.6:SystemClipboard::self()
libklipper.so.6:SystemClipboard::slotCheckPending()
libklipper.so.6:SystemClipboard::slotClearOverflow()
libklipper.so.6:SystemClipboard::~SystemClipboard()
libklipper.so.6:URLGrabber::URLGrabber(QObject*)
libklipper.so.6:URLGrabber::loadSettings()
libklipper.so.6:URLGrabber::sigDisablePopup()
libklipper.so.6:URLGrabber::sigPopup(QMenu*)
libklipper.so.6:URLGrabber::slotItemSelected(QAction*)
libklipper.so.6:URLGrabber::slotKillPopupMenu()
libklipper.so.6:URLGrabber::~URLGrabber()
libkmpris.so.6:AbstractPlayerContainer::AbstractPlayerContainer(QObject*)
libkmpris.so.6:AbstractPlayerContainer::albumChanged()
libkmpris.so.6:AbstractPlayerContainer::artUrlChanged()
libkmpris.so.6:AbstractPlayerContainer::artistChanged()
libkmpris.so.6:AbstractPlayerContainer::canControlChanged()
libkmpris.so.6:AbstractPlayerContainer::canGoNextChanged()
libkmpris.so.6:AbstractPlayerContainer::canGoPreviousChanged()
libkmpris.so.6:AbstractPlayerContainer::canPauseChanged()
libkmpris.so.6:AbstractPlayerContainer::canPlayChanged()
libkmpris.so.6:AbstractPlayerContainer::canQuitChanged()
libkmpris.so.6:AbstractPlayerContainer::canRaiseChanged()
libkmpris.so.6:AbstractPlayerContainer::canSeekChanged()
libkmpris.so.6:AbstractPlayerContainer::canSetFullscreenChanged()
libkmpris.so.6:AbstractPlayerContainer::canStopChanged()
libkmpris.so.6:AbstractPlayerContainer::desktopEntryChanged()
libkmpris.so.6:AbstractPlayerContainer::fullscreenChanged()
libkmpris.so.6:AbstractPlayerContainer::hasTrackListChanged()
libkmpris.so.6:AbstractPlayerContainer::identityChanged()
libkmpris.so.6:AbstractPlayerContainer::kdePidChanged()
libkmpris.so.6:AbstractPlayerContainer::lengthChanged()
libkmpris.so.6:AbstractPlayerContainer::loopStatusChanged()
libkmpris.so.6:AbstractPlayerContainer::maximumRateChanged()
libkmpris.so.6:AbstractPlayerContainer::metadataChanged()
libkmpris.so.6:AbstractPlayerContainer::minimumRateChanged()
libkmpris.so.6:AbstractPlayerContainer::playbackStatusChanged()
libkmpris.so.6:AbstractPlayerContainer::positionChanged()
libkmpris.so.6:AbstractPlayerContainer::rateChanged()
libkmpris.so.6:AbstractPlayerContainer::shuffleChanged()
libkmpris.so.6:AbstractPlayerContainer::supportedMimeTypesChanged()
libkmpris.so.6:AbstractPlayerContainer::supportedUriSchemesChanged()
libkmpris.so.6:AbstractPlayerContainer::trackChanged()
libkmpris.so.6:AbstractPlayerContainer::volumeChanged()
libkmpris.so.6:AbstractPlayerContainer::~AbstractPlayerContainer()
libkmpris.so.6:Mpris2Model::Mpris2Model(QObject*)
libkmpris.so.6:Mpris2Model::currentIndexChanged()
libkmpris.so.6:Mpris2Model::currentPlayerChanged()
libkmpris.so.6:Mpris2Model::~Mpris2Model()
libkmpris.so.6:Multiplexer::Multiplexer(QObject*)
libkmpris.so.6:Multiplexer::activePlayerIndexChanged(int)
libkmpris.so.6:Multiplexer::evaluatePlayers()
libkmpris.so.6:Multiplexer::onPlaybackStatusChanged()
libkmpris.so.6:Multiplexer::self()
libkmpris.so.6:Multiplexer::updateIndex()
libkmpris.so.6:Multiplexer::~Multiplexer()
libkmpris.so.6:MultiplexerModel::MultiplexerModel(QObject*)
libkmpris.so.6:MultiplexerModel::self()
libkmpris.so.6:MultiplexerModel::updateActivePlayer()
libkmpris.so.6:MultiplexerModel::~MultiplexerModel()
libkmpris.so.6:PlayerContainer::Next()
libkmpris.so.6:PlayerContainer::Pause()
libkmpris.so.6:PlayerContainer::Play()
libkmpris.so.6:PlayerContainer::PlayPause()
libkmpris.so.6:PlayerContainer::Previous()
libkmpris.so.6:PlayerContainer::Quit()
libkmpris.so.6:PlayerContainer::Raise()
libkmpris.so.6:PlayerContainer::Stop()
libkmpris.so.6:PlayerContainer::initBindings()
libkmpris.so.6:PlayerContainer::initialFetchFailed(PlayerContainer*)
libkmpris.so.6:PlayerContainer::initialFetchFinished(PlayerContainer*)
libkmpris.so.6:PlayerContainer::onGetPropsFinished(QDBusPendingCallWatcher*)
libkmpris.so.6:PlayerContainer::refresh()
libkmpris.so.6:PlayerContainer::setFullscreen(bool)
libkmpris.so.6:PlayerContainer::setLoopStatus(LoopStatus::Status)
libkmpris.so.6:PlayerContainer::setPlaybackStatus(PlaybackStatus::Status)
libkmpris.so.6:PlayerContainer::setRate(double)
libkmpris.so.6:PlayerContainer::setShuffle(ShuffleStatus::Status)
libkmpris.so.6:PlayerContainer::setVolume(double)
libkmpris.so.6:PlayerContainer::updatePosition()
libkmpris.so.6:PlayerContainer::~PlayerContainer()
libkmpris.so.6:qml_register_types_org_kde_plasma_private_mpris()
libkrdb.so:xftDpi()
libkworkspace6.so.6:AutostartScriptDesktopFile::autostartLocation()
libkworkspace6.so.6:DefaultService::browser()
libkworkspace6.so.6:DefaultService::legacyBrowserExec()
libkworkspace6.so.6:DefaultWallpaper::defaultWallpaperPackage()
libkworkspace6.so.6:KDisplayManager::GDMAuthenticate()
libkworkspace6.so.6:KDisplayManager::KDisplayManager()
libkworkspace6.so.6:KDisplayManager::canShutdown()
libkworkspace6.so.6:KDisplayManager::isSwitchable()
libkworkspace6.so.6:KDisplayManager::localSessions(QList<SessEnt>&)
libkworkspace6.so.6:KDisplayManager::lockSwitchVT(int)
libkworkspace6.so.6:KDisplayManager::numReserve()
libkworkspace6.so.6:KDisplayManager::startReserve()
libkworkspace6.so.6:KDisplayManager::switchVT(int)
libkworkspace6.so.6:KDisplayManager::~KDisplayManager()
libkworkspace6.so.6:OutputOrderWatcher::OutputOrderWatcher(QObject*)
libkworkspace6.so.6:OutputOrderWatcher::instance(QObject*)
libkworkspace6.so.6:OutputOrderWatcher::refresh()
libkworkspace6.so.6:SessionBackend::SessionBackend()
libkworkspace6.so.6:SessionBackend::aboutToSuspend()
libkworkspace6.so.6:SessionBackend::canHibernateChanged()
libkworkspace6.so.6:SessionBackend::canHybridSuspendChanged()
libkworkspace6.so.6:SessionBackend::canRebootChanged()
libkworkspace6.so.6:SessionBackend::canShutdownChanged()
libkworkspace6.so.6:SessionBackend::canSuspendChanged()
libkworkspace6.so.6:SessionBackend::canSuspendThenHibernateChanged()
libkworkspace6.so.6:SessionBackend::resumingFromSuspend()
libkworkspace6.so.6:SessionBackend::self()
libkworkspace6.so.6:SessionBackend::stateChanged()
libkworkspace6.so.6:SessionManagement::SessionManagement(QObject*)
libkworkspace6.so.6:SessionManagement::aboutToSuspend()
libkworkspace6.so.6:SessionManagement::canHibernateChanged()
libkworkspace6.so.6:SessionManagement::canHybridSuspendChanged()
libkworkspace6.so.6:SessionManagement::canLockChanged()
libkworkspace6.so.6:SessionManagement::canLogoutChanged()
libkworkspace6.so.6:SessionManagement::canRebootChanged()
libkworkspace6.so.6:SessionManagement::canSaveSessionChanged()
libkworkspace6.so.6:SessionManagement::canShutdownChanged()
libkworkspace6.so.6:SessionManagement::canSuspendChanged()
libkworkspace6.so.6:SessionManagement::canSuspendThenHibernateChanged()
libkworkspace6.so.6:SessionManagement::canSwitchUserChanged()
libkworkspace6.so.6:SessionManagement::hibernate()
libkworkspace6.so.6:SessionManagement::hybridSuspend()
libkworkspace6.so.6:SessionManagement::lock()
libkworkspace6.so.6:SessionManagement::requestLogout(SessionManagement::ConfirmationMode)
libkworkspace6.so.6:SessionManagement::requestLogoutPrompt()
libkworkspace6.so.6:SessionManagement::requestReboot(SessionManagement::ConfirmationMode)
libkworkspace6.so.6:SessionManagement::requestShutdown(SessionManagement::ConfirmationMode)
libkworkspace6.so.6:SessionManagement::resumingFromSuspend()
libkworkspace6.so.6:SessionManagement::saveSession()
libkworkspace6.so.6:SessionManagement::stateChanged()
libkworkspace6.so.6:SessionManagement::suspend()
libkworkspace6.so.6:SessionManagement::suspendThenHibernate()
libkworkspace6.so.6:SessionManagement::switchUser()
libnotificationmanager.so.1:NotificationManager::AbstractNotificationsModel::AbstractNotificationsModel()
libnotificationmanager.so.1:NotificationManager::AbstractNotificationsModel::clear(QFlags<NotificationManager::Notifications::ClearFlag>)
libnotificationmanager.so.1:NotificationManager::AbstractNotificationsModel::lastReadChanged()
libnotificationmanager.so.1:NotificationManager::AbstractNotificationsModel::notifications()
libnotificationmanager.so.1:NotificationManager::AbstractNotificationsModel::setWindow(QWindow*)
libnotificationmanager.so.1:NotificationManager::AbstractNotificationsModel::windowChanged(QWindow*)
libnotificationmanager.so.1:NotificationManager::AbstractNotificationsModel::~AbstractNotificationsModel()
libnotificationmanager.so.1:NotificationManager::BadgeSettings::BadgeSettings(QObject*)
libnotificationmanager.so.1:NotificationManager::BadgeSettings::InTaskManagerChanged()
libnotificationmanager.so.1:NotificationManager::BadgeSettings::~BadgeSettings()
libnotificationmanager.so.1:NotificationManager::BehaviorSettings::ShowBadgesChanged()
libnotificationmanager.so.1:NotificationManager::BehaviorSettings::ShowInHistoryChanged()
libnotificationmanager.so.1:NotificationManager::BehaviorSettings::ShowPopupsChanged()
libnotificationmanager.so.1:NotificationManager::BehaviorSettings::ShowPopupsInDndModeChanged()
libnotificationmanager.so.1:NotificationManager::BehaviorSettings::~BehaviorSettings()
libnotificationmanager.so.1:NotificationManager::DoNotDisturbSettings::DoNotDisturbSettings(QObject*)
libnotificationmanager.so.1:NotificationManager::DoNotDisturbSettings::NotificationSoundsMutedChanged()
libnotificationmanager.so.1:NotificationManager::DoNotDisturbSettings::UntilChanged()
libnotificationmanager.so.1:NotificationManager::DoNotDisturbSettings::WhenScreenSharingChanged()
libnotificationmanager.so.1:NotificationManager::DoNotDisturbSettings::WhenScreensMirroredChanged()
libnotificationmanager.so.1:NotificationManager::DoNotDisturbSettings::~DoNotDisturbSettings()
libnotificationmanager.so.1:NotificationManager::EventSettings::~EventSettings()
libnotificationmanager.so.1:NotificationManager::Job::descriptionLabel1Changed()
libnotificationmanager.so.1:NotificationManager::Job::descriptionLabel2Changed()
libnotificationmanager.so.1:NotificationManager::Job::descriptionUrlChanged()
libnotificationmanager.so.1:NotificationManager::Job::descriptionValue1Changed()
libnotificationmanager.so.1:NotificationManager::Job::descriptionValue2Changed()
libnotificationmanager.so.1:NotificationManager::Job::destUrlChanged()
libnotificationmanager.so.1:NotificationManager::Job::dismissedChanged()
libnotificationmanager.so.1:NotificationManager::Job::effectiveDestUrlChanged()
libnotificationmanager.so.1:NotificationManager::Job::errorChanged(int)
libnotificationmanager.so.1:NotificationManager::Job::expiredChanged()
libnotificationmanager.so.1:NotificationManager::Job::hasDetailsChanged()
libnotificationmanager.so.1:NotificationManager::Job::kill()
libnotificationmanager.so.1:NotificationManager::Job::percentageChanged(int)
libnotificationmanager.so.1:NotificationManager::Job::processedAmountChanged()
libnotificationmanager.so.1:NotificationManager::Job::processedBytesChanged()
libnotificationmanager.so.1:NotificationManager::Job::processedDirectoriesChanged()
libnotificationmanager.so.1:NotificationManager::Job::processedFilesChanged()
libnotificationmanager.so.1:NotificationManager::Job::processedItemsChanged()
libnotificationmanager.so.1:NotificationManager::Job::resetUpdated()
libnotificationmanager.so.1:NotificationManager::Job::resume()
libnotificationmanager.so.1:NotificationManager::Job::setDismissed(bool)
libnotificationmanager.so.1:NotificationManager::Job::setError(int)
libnotificationmanager.so.1:NotificationManager::Job::setExpired(bool)
libnotificationmanager.so.1:NotificationManager::Job::setKillable(bool)
libnotificationmanager.so.1:NotificationManager::Job::setState(NotificationManager::Notifications::JobState)
libnotificationmanager.so.1:NotificationManager::Job::setSuspendable(bool)
libnotificationmanager.so.1:NotificationManager::Job::setTransient(bool)
libnotificationmanager.so.1:NotificationManager::Job::speedChanged()
libnotificationmanager.so.1:NotificationManager::Job::stateChanged(NotificationManager::Notifications::JobState)
libnotificationmanager.so.1:NotificationManager::Job::summaryChanged()
libnotificationmanager.so.1:NotificationManager::Job::suspend()
libnotificationmanager.so.1:NotificationManager::Job::textChanged()
libnotificationmanager.so.1:NotificationManager::Job::totalAmountChanged()
libnotificationmanager.so.1:NotificationManager::Job::totalBytesChanged()
libnotificationmanager.so.1:NotificationManager::Job::totalDirectoriesChanged()
libnotificationmanager.so.1:NotificationManager::Job::totalFilesChanged()
libnotificationmanager.so.1:NotificationManager::Job::totalItemsChanged()
libnotificationmanager.so.1:NotificationManager::Job::updatedChanged()
libnotificationmanager.so.1:NotificationManager::Job::~Job()
libnotificationmanager.so.1:NotificationManager::JobSettings::InNotificationsChanged()
libnotificationmanager.so.1:NotificationManager::JobSettings::JobSettings(QObject*)
libnotificationmanager.so.1:NotificationManager::JobSettings::PermanentPopupsChanged()
libnotificationmanager.so.1:NotificationManager::JobSettings::~JobSettings()
libnotificationmanager.so.1:NotificationManager::JobsModel::JobsModel()
libnotificationmanager.so.1:NotificationManager::JobsModel::clear(QFlags<NotificationManager::Notifications::ClearFlag>)
libnotificationmanager.so.1:NotificationManager::JobsModel::createJobsModel()
libnotificationmanager.so.1:NotificationManager::JobsModel::init()
libnotificationmanager.so.1:NotificationManager::JobsModel::serviceOwnershipLost()
libnotificationmanager.so.1:NotificationManager::JobsModel::~JobsModel()
libnotificationmanager.so.1:NotificationManager::Notification::Notification(NotificationManager::Notification&&)
libnotificationmanager.so.1:NotificationManager::Notification::operator=(NotificationManager::Notification&&)
libnotificationmanager.so.1:NotificationManager::Notification::resetUpdated()
libnotificationmanager.so.1:NotificationManager::Notification::setDismissed(bool)
libnotificationmanager.so.1:NotificationManager::Notification::setExpired(bool)
libnotificationmanager.so.1:NotificationManager::Notification::setRead(bool)
libnotificationmanager.so.1:NotificationManager::Notification::setResident(bool)
libnotificationmanager.so.1:NotificationManager::Notification::setTimeout(int)
libnotificationmanager.so.1:NotificationManager::Notification::setTransient(bool)
libnotificationmanager.so.1:NotificationManager::Notification::setWasAddedDuringInhibition(bool)
libnotificationmanager.so.1:NotificationManager::Notification::~Notification()
libnotificationmanager.so.1:NotificationManager::NotificationSettings::CriticalInDndModeChanged()
libnotificationmanager.so.1:NotificationManager::NotificationSettings::LowPriorityHistoryChanged()
libnotificationmanager.so.1:NotificationManager::NotificationSettings::LowPriorityPopupsChanged()
libnotificationmanager.so.1:NotificationManager::NotificationSettings::NormalAlwaysOnTopChanged()
libnotificationmanager.so.1:NotificationManager::NotificationSettings::NotificationSettings(QObject*)
libnotificationmanager.so.1:NotificationManager::NotificationSettings::PopupPositionChanged()
libnotificationmanager.so.1:NotificationManager::NotificationSettings::PopupTimeoutChanged()
libnotificationmanager.so.1:NotificationManager::NotificationSettings::~NotificationSettings()
libnotificationmanager.so.1:NotificationManager::Notifications::Notifications(QObject*)
libnotificationmanager.so.1:NotificationManager::Notifications::activeJobsCountChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::activeNotificationsCountChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::blacklistedDesktopEntriesChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::blacklistedNotifyRcNamesChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::classBegin()
libnotificationmanager.so.1:NotificationManager::Notifications::clear(QFlags<NotificationManager::Notifications::ClearFlag>)
libnotificationmanager.so.1:NotificationManager::Notifications::collapseAllGroups()
libnotificationmanager.so.1:NotificationManager::Notifications::componentComplete()
libnotificationmanager.so.1:NotificationManager::Notifications::countChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::expandUnreadChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::expiredNotificationsCountChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::groupLimitChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::groupModeChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::jobsPercentageChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::lastReadChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::limitChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::resetLastRead()
libnotificationmanager.so.1:NotificationManager::Notifications::setExpandUnread(bool)
libnotificationmanager.so.1:NotificationManager::Notifications::setGroupLimit(int)
libnotificationmanager.so.1:NotificationManager::Notifications::setGroupMode(NotificationManager::Notifications::GroupMode)
libnotificationmanager.so.1:NotificationManager::Notifications::setLimit(int)
libnotificationmanager.so.1:NotificationManager::Notifications::setShowAddedDuringInhibition(bool)
libnotificationmanager.so.1:NotificationManager::Notifications::setShowDismissed(bool)
libnotificationmanager.so.1:NotificationManager::Notifications::setShowExpired(bool)
libnotificationmanager.so.1:NotificationManager::Notifications::setShowJobs(bool)
libnotificationmanager.so.1:NotificationManager::Notifications::setShowNotifications(bool)
libnotificationmanager.so.1:NotificationManager::Notifications::setSortMode(NotificationManager::Notifications::SortMode)
libnotificationmanager.so.1:NotificationManager::Notifications::setSortOrder(Qt::SortOrder)
libnotificationmanager.so.1:NotificationManager::Notifications::setUrgencies(QFlags<NotificationManager::Notifications::Urgency>)
libnotificationmanager.so.1:NotificationManager::Notifications::setWindow(QWindow*)
libnotificationmanager.so.1:NotificationManager::Notifications::showAddedDuringInhibitionChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::showDismissedChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::showExpiredChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::showInhibitionSummary()
libnotificationmanager.so.1:NotificationManager::Notifications::showJobsChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::showNotificationsChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::sortModeChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::sortOrderChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::unreadNotificationsCountChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::urgenciesChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::whitelistedDesktopEntriesChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::whitelistedNotifyRcNamesChanged()
libnotificationmanager.so.1:NotificationManager::Notifications::windowChanged(QWindow*)
libnotificationmanager.so.1:NotificationManager::Notifications::~Notifications()
libnotificationmanager.so.1:NotificationManager::NotificationsModel::NotificationsModel()
libnotificationmanager.so.1:NotificationManager::NotificationsModel::createNotificationsModel()
libnotificationmanager.so.1:NotificationManager::Server::Server(QObject*)
libnotificationmanager.so.1:NotificationManager::Server::clearInhibitions()
libnotificationmanager.so.1:NotificationManager::Server::inhibitedByApplicationChanged(bool)
libnotificationmanager.so.1:NotificationManager::Server::inhibitedChanged(bool)
libnotificationmanager.so.1:NotificationManager::Server::inhibitionApplicationsChanged()
libnotificationmanager.so.1:NotificationManager::Server::init()
libnotificationmanager.so.1:NotificationManager::Server::self()
libnotificationmanager.so.1:NotificationManager::Server::serviceOwnershipLost()
libnotificationmanager.so.1:NotificationManager::Server::setInhibited(bool)
libnotificationmanager.so.1:NotificationManager::Server::validChanged()
libnotificationmanager.so.1:NotificationManager::Server::~Server()
libnotificationmanager.so.1:NotificationManager::ServerInfo::ServerInfo(QObject*)
libnotificationmanager.so.1:NotificationManager::ServerInfo::statusChanged(NotificationManager::ServerInfo::Status)
libnotificationmanager.so.1:NotificationManager::ServerInfo::~ServerInfo()
libnotificationmanager.so.1:NotificationManager::Settings::Settings(QObject*)
libnotificationmanager.so.1:NotificationManager::Settings::defaults()
libnotificationmanager.so.1:NotificationManager::Settings::dirtyChanged()
libnotificationmanager.so.1:NotificationManager::Settings::knownApplicationsChanged()
libnotificationmanager.so.1:NotificationManager::Settings::liveChanged()
libnotificationmanager.so.1:NotificationManager::Settings::load()
libnotificationmanager.so.1:NotificationManager::Settings::notificationInhibitionApplicationsChanged()
libnotificationmanager.so.1:NotificationManager::Settings::notificationsInhibitedByApplicationChanged(bool)
libnotificationmanager.so.1:NotificationManager::Settings::resetNotificationsInhibitedUntil()
libnotificationmanager.so.1:NotificationManager::Settings::resetPopupTimeout()
libnotificationmanager.so.1:NotificationManager::Settings::revokeApplicationInhibitions()
libnotificationmanager.so.1:NotificationManager::Settings::save()
libnotificationmanager.so.1:NotificationManager::Settings::screensMirroredChanged()
libnotificationmanager.so.1:NotificationManager::Settings::setBadgesInTaskManager(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setCriticalPopupsInDoNotDisturbMode(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setInhibitNotificationsWhenScreenSharing(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setInhibitNotificationsWhenScreensMirrored(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setJobsInNotifications(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setKeepNormalAlwaysOnTop(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setLive(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setLowPriorityHistory(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setLowPriorityPopups(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setNotificationSoundsInhibited(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setPermanentJobPopups(bool)
libnotificationmanager.so.1:NotificationManager::Settings::setPopupPosition(NotificationManager::Settings::PopupPosition)
libnotificationmanager.so.1:NotificationManager::Settings::setPopupTimeout(int)
libnotificationmanager.so.1:NotificationManager::Settings::setScreensMirrored(bool)
libnotificationmanager.so.1:NotificationManager::Settings::settingsChanged()
libnotificationmanager.so.1:NotificationManager::Settings::~Settings()
libnotificationmanager.so.1:NotificationManager::WatchedNotificationsModel::Private::~Private()
libnotificationmanager.so.1:NotificationManager::WatchedNotificationsModel::WatchedNotificationsModel()
libnotificationmanager.so.1:NotificationManager::WatchedNotificationsModel::valid()
libnotificationmanager.so.1:NotificationManager::WatchedNotificationsModel::validChanged(bool)
libnotificationmanager.so.1:NotificationManager::WatchedNotificationsModel::~WatchedNotificationsModel()
libnotificationmanager.so.1:qml_register_types_org_kde_notificationmanager()
libtaskmanager.so.6:TaskManager::AbstractTasksModel::AbstractTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::AbstractTasksModel::~AbstractTasksModel()
libtaskmanager.so.6:TaskManager::AbstractWindowTasksModel::AbstractWindowTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::AbstractWindowTasksModel::~AbstractWindowTasksModel()
libtaskmanager.so.6:TaskManager::ActivityInfo::ActivityInfo(QObject*)
libtaskmanager.so.6:TaskManager::ActivityInfo::~ActivityInfo()
libtaskmanager.so.6:TaskManager::ConcatenateTasksProxyModel::ConcatenateTasksProxyModel(QObject*)
libtaskmanager.so.6:TaskManager::ConcatenateTasksProxyModel::~ConcatenateTasksProxyModel()
libtaskmanager.so.6:TaskManager::FlattenTaskGroupsProxyModel::FlattenTaskGroupsProxyModel(QObject*)
libtaskmanager.so.6:TaskManager::FlattenTaskGroupsProxyModel::setSourceModel(QAbstractItemModel*)
libtaskmanager.so.6:TaskManager::FlattenTaskGroupsProxyModel::~FlattenTaskGroupsProxyModel()
libtaskmanager.so.6:TaskManager::LauncherTasksModel::LauncherTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::LauncherTasksModel::~LauncherTasksModel()
libtaskmanager.so.6:TaskManager::StartupTasksModel::StartupTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::StartupTasksModel::~StartupTasksModel()
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::TaskFilterProxyModel(QObject*)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::filterByRegionChanged()
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::filterMinimizedChanged()
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::regionGeometryChanged()
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setDemandingAttentionSkipsFilters(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterByActivity(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterByRegion(RegionFilterMode::Mode)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterByScreen(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterByVirtualDesktop(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterHidden(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterMinimized(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterNotMaximized(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterNotMinimized(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterSkipPager(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setFilterSkipTaskbar(bool)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::setSourceModel(QAbstractItemModel*)
libtaskmanager.so.6:TaskManager::TaskFilterProxyModel::~TaskFilterProxyModel()
libtaskmanager.so.6:TaskManager::TaskGroupingProxyModel::TaskGroupingProxyModel(QObject*)
libtaskmanager.so.6:TaskManager::TaskGroupingProxyModel::setGroupDemandingAttention(bool)
libtaskmanager.so.6:TaskManager::TaskGroupingProxyModel::setGroupMode(TaskManager::TasksModel::GroupMode)
libtaskmanager.so.6:TaskManager::TaskGroupingProxyModel::setSourceModel(QAbstractItemModel*)
libtaskmanager.so.6:TaskManager::TaskGroupingProxyModel::setWindowTasksThreshold(int)
libtaskmanager.so.6:TaskManager::TaskGroupingProxyModel::~TaskGroupingProxyModel()
libtaskmanager.so.6:TaskManager::TasksModel::TasksModel(QObject*)
libtaskmanager.so.6:TaskManager::TasksModel::classBegin()
libtaskmanager.so.6:TaskManager::TasksModel::componentComplete()
libtaskmanager.so.6:TaskManager::TasksModel::filterByRegionChanged()
libtaskmanager.so.6:TaskManager::TasksModel::filterMinimizedChanged()
libtaskmanager.so.6:TaskManager::TasksModel::regionGeometryChanged()
libtaskmanager.so.6:TaskManager::TasksModel::setFilterByActivity(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setFilterByRegion(RegionFilterMode::Mode)
libtaskmanager.so.6:TaskManager::TasksModel::setFilterByScreen(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setFilterByVirtualDesktop(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setFilterHidden(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setFilterMinimized(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setFilterNotMaximized(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setFilterNotMinimized(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setGroupInline(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setGroupMode(TaskManager::TasksModel::GroupMode)
libtaskmanager.so.6:TaskManager::TasksModel::setGroupingWindowTasksThreshold(int)
libtaskmanager.so.6:TaskManager::TasksModel::setHideActivatedLaunchers(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setLaunchInPlace(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setSeparateLaunchers(bool)
libtaskmanager.so.6:TaskManager::TasksModel::setSortMode(TaskManager::TasksModel::SortMode)
libtaskmanager.so.6:TaskManager::TasksModel::setTaskReorderingEnabled(bool)
libtaskmanager.so.6:TaskManager::TasksModel::syncLaunchers()
libtaskmanager.so.6:TaskManager::TasksModel::updateLauncherCount()
libtaskmanager.so.6:TaskManager::TasksModel::~TasksModel()
libtaskmanager.so.6:TaskManager::VirtualDesktopInfo::VirtualDesktopInfo(QObject*)
libtaskmanager.so.6:TaskManager::VirtualDesktopInfo::~VirtualDesktopInfo()
libtaskmanager.so.6:TaskManager::WaylandStartupTasksModel::WaylandStartupTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::WaylandStartupTasksModel::~WaylandStartupTasksModel()
libtaskmanager.so.6:TaskManager::WaylandTasksModel::WaylandTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::WaylandTasksModel::~WaylandTasksModel()
libtaskmanager.so.6:TaskManager::WindowTasksModel::WindowTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::WindowTasksModel::~WindowTasksModel()
libtaskmanager.so.6:TaskManager::XStartupTasksModel::XStartupTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::XStartupTasksModel::~XStartupTasksModel()
libtaskmanager.so.6:TaskManager::XWindowTasksModel::XWindowTasksModel(QObject*)
libtaskmanager.so.6:TaskManager::XWindowTasksModel::~XWindowTasksModel()
libtaskmanager.so.6:qml_register_types_org_kde_taskmanager()
libweather_ion.so.7:IonInterface::IonInterface(QObject*)
libweather_ion.so.7:IonInterface::setInitialized(bool)
libweather_ion.so.7:IonInterface::~IonInterface()
